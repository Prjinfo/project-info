from PIL import Image
import imageio.v2 as imageio
from numpy import*
import matplotlib.pyplot as plt
Img = imageio.imread("cttm1.jpg").tolist()
plt.imshow(Img)
plt.axis ("off")
plt.show ()
def grayscale(Img):
        GrayImg=[[0]*len(Img[0]) for i in range(len(Img))]#initialiser la matrice 2D en 0
        for i in range(len(Img)):
              for j in range(len(Img[0])):
                    GrayImg[i][j]=(Img[i][j][2]+Img[i][j][0]+Img[i][j][1])//3 #implémenter la mztrice avec la moyenne de chaque pixel
        print (GrayImg)
        arr = array(GrayImg, dtype=uint8)
        new_image = Image.fromarray(arr) #convertir la matrice en image
        plt.axis("off")
        plt.imshow(new_image, cmap = "gray")
        plt.show()

grayscale(Img)
########L'INTERFACE########
print("from PIL import Image /nfrom numpy import* /ndef grayscale(imageRGB): /nGrayImg=[[0]*len(Img[0]) /nfor i in range(len(Img))]#initialiser la matrice 2D en 0 /nfor i in range(len(Img)): /nfor j in range(len(Img[0])):/n GrayImg[i][j]=(Img[i][j][2]+Img[i][j][0]+Img[i][j][1])//3 #implémenter la mztrice avec la moyenne de chaque pixel /nprint(GrayImg) /narray = array(GrayImg, dtype=uint8) /nnew_image = Image.fromarray(array) #convertir la matrice en image /nplt.axis("off") /nplt.imshow(new_image, cmap = "gray") #ouvrir l'image /nplt.show()")
